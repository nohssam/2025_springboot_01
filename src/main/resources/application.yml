# spring.application.name=edu01

# # 생략 가능
# server.port= 8080

# # DB 설정
# spring.datasource.url=jdbc:mysql://localhost:3306/ictedu_db
# spring.datasource.username=ictedu
# spring.datasource.password=1111
# spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# # mybatis 설정
# mybatis.mapper-locations=mapper/*.xml
# mybatis.type-aliases-package=com.ict.edu01  
# # 코드에 직접 별칭 넣을 수 있다. 

# #jwt (900000 = 1000 * 60 * 15 분) (1시간 : 3,600,000, 1일:86,400,000, 7일:604,800,000)
# jwt.secret=mysecretmy1secretmy2secretmysecr
# jwt.access-token-validity=60000
# jwt.refresh-token-validity=60000

# spring.output.ansi.enabled=ALWAYS
# logging.charset.console=UTF-8
# logging.charset.file=UTF-8

spring:
    application:
        name: edu01

    datasource:
        url: jdbc:mysql://13.125.254.85:3306/ictedu_db
        username: ictedu
        password: 1111
        driver-class-name: com.mysql.cj.jdbc.Driver

    security:
        oauth2:
            client:
                registration: 
                    kakao:
                        client-id: e1f434f36a8b5943955f50d34151b450
                        client-secret: eSgObJqLugkvs9xVO5R0pQlwUfCuBdex
                        redirect-uri: http://localhost:8080/login/oauth2/code/kakao
                        authorization-grant-type: authorization_code
                        client-authentication-method: client_secret_post
                        client-name: Kakao
                        #scope: [profile_nickname, profile_image, account_email] 와 같은 배열의 의미
                        scope:
                            - profile_nickname
                            - profile_image
                            - account_email
                    naver: 
                        client-id: orikZAvmDL1WQVGGUTAY
                        client-secret: mwnS7nYNci
                        redirect-uri: http://localhost:8080/login/oauth2/code/naver
                        authorization-grant-type: authorization_code
                        client-name: Naver
                        scope:
                            - name
                            - email
                provider:
                    kakao: 
                        authorization-uri: https://kauth.kakao.com/oauth/authorize
                        token-uri: https://kauth.kakao.com/oauth/token
                        user-info-uri: https://kapi.kakao.com/v2/user/me
                        user-name-attribute: id

                    naver: 
                        authorization-uri:  https://nid.naver.com/oauth2.0/authorize
                        token-uri: https://nid.naver.com/oauth2.0/token
                        user-info-uri: https://openapi.naver.com/v1/nid/me
                        user-name-attribute: response

    # spring.output.ansi.enabled=ALWAYS
    output:
        ansi:
            enabled: ALWAYS
          

server:
  port: 8080
  
mybatis:
  mapper-locations: mapper/*.xml
  type-aliases-package: com.ict.edu01

jwt:
    secret: mysecretmy1secretmy2secretmysecr
    access-token-validity: 900000
    refresh-token-validity: 604800000


  
    